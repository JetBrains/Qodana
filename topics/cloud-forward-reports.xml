<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic SYSTEM "https://resources.jetbrains.com/stardust/html-entities.dtd">

<topic xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/stardust/topic.v2.xsd"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       title="Forward reports"
       id="cloud-forward-reports">

    <chapter id="cloud-forward-reports-configure-cloud" title="Configure Qodana Cloud">

    <p>To see %product% reports in the %product_cloud% UI, you need to get them uploaded. Prior to that, you need to
        create a project and generate a project-related token as described below. </p>

    <img src="qc-new-project.png" dark-src="qc-new-project_dark.png" alt="The New Project button" width="706" border-effect="line"/>

    <list type="decimal">
        <li>To create a new project in the %product_cloud% UI, on the <menupath>Projects</menupath> page click  the
            <menupath>New project</menupath> button in the upper-right corner.</li>
        <li>After the new project was created, you can configure it.</li>
        <li>Click the <menupath>Generate token</menupath> button to generate a project token.</li>
        <li><p>Copy the project token and save it for future use.</p>
            <img src="qc-new-project-2.png" dark-src="qc-new-project-2_dark.png" alt="Project token" width="706" border-effect="line"/>
            <note>Once generated, the token is available for copying only before pushing the first report to %product_cloud%.
                The same rule applies to renaming and deletion of projects.</note>
        </li>
    </list>

    </chapter>

    <chapter id="cloud-forward-reports-configure-qodana" title="Configure Qodana">

        <!-- I need to test all options and actualize them in the parameters page. And maybe mention them here once more -->

        <p>This chapter explains how to forward %product% inspection reports to %product_cloud% based on the following cases:</p>

        <list>
            <li><a anchor="cloud-forward-reports-local-run">Local %product% run</a></li>
            <li><a anchor="cloud-forward-reports-github-actions">GitHub Actions</a></li>
            <li><a anchor="cloud-forward-reports-gitlab-ci">GitLab CI</a></li>
            <li><a anchor="cloud-forward-reports-jenkins">Jenkins</a></li>
            <li><a anchor="cloud-forward-reports-teamcity-plugin">TeamCity plugin</a></li>
            <li><a anchor="cloud-forward-reports-space-automation">Space Automation</a></li>
        </list>

    <chapter id="cloud-forward-reports-local-run" title="Local Qodana run">

        <p>Below is the CLI command for running the Docker version of %product% locally:</p>

        <code style="block" lang="bash">
            sudo docker run -v $(pwd)/project/:/data/project/ \
            -v $(pwd)/report/:/data/results/ &lt;qodana_linter&gt; \
            --send-report -t &lt;qodana_cloud_token&gt;
        </code>

        <p>Here,  <code style="inline" lang="bash">--send-report</code> enables forwarding %product%
            reports to %product_cloud%, and the <code style="inline" lang="bash">-t</code> option specifies the project
        token.</p>

        <p>For more details about configuration options, see the configuration options of your linter. </p>

    </chapter>

    <chapter id="cloud-forward-reports-github-actions" title="GitHub Actions">

        https://docs.github.com/en/actions/security-guides/encrypted-secrets#creating-encrypted-secrets-for-a-repository

        <code style="block" lang="yaml">
            - name: 'Qodana Scan'
               uses: JetBrains/qodana-action@latest
               with:
                 linter: jetbrains/qodana-jvm
                 qodana-token: ${{ secrets.QODANA_TOKEN }}
        </code>

    </chapter>

    <chapter id="cloud-forward-reports-gitlab-ci" title="GitLab CI">

    </chapter>

    <chapter id="cloud-forward-reports-jenkins" title="Jenkins">

    </chapter>

    <chapter id="cloud-forward-reports-teamcity-plugin" title="TeamCity plugin">

    <p>

        Add new build parameter with name QODANA_TOKEN, define as password type. Build parameters - Password type
        Open Qodana build step
        Add --send-report --token &#37;env.QODANA_TOKEN&#37; to the Additional arguments for the entry point section. - this one is specific for each plugin. Define for plugins you want to upload reports from.

    </p>

    </chapter>

    <chapter id="cloud-forward-reports-space-automation" title="Space Automation">

        <code style="block" lang="kotlin">
            job("Qodana") {
                container("jetbrains/qodana-jvm-community:2021.3") {
                    env["token"] = Secrets("token")  // https://www.jetbrains.com/help/space/secrets-and-parameters.html
                    shellScript {
                        content = """
                qodana -t ${'$'}token --send-report
            """.trimIndent()
                    }
                }
            }
        </code>

        https://www.jetbrains.com/help/space/automation-concepts.html#what-is-space-automation

    </chapter>

    </chapter>

</topic>
