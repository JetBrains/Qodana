<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic SYSTEM "https://resources.jetbrains.com/stardust/html-entities.dtd">

<topic xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/stardust/topic.v2.xsd"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       title="Quality gate"
       id="quality-gate">

    <var name="protectionrule" value="repositories/configuring-branches-and-merges-in-your-repository/defining-the-mergeability-of-pull-requests/managing-a-branch-protection-rule"/>

    <p><emphasis>Quality gate</emphasis> is the maximum number of problems that can be detected by %product% without
        causing a CI/CD workflow or pipeline fail. Once the quality gate limit is reached, %product% terminates with the
        exit code 255. </p>

    <p>This feature lets you control your code quality and build software that meets your quality metrics.
        For example, if you set the quality gate for ten problems, a build workflow will fail once the eleventh
        problem is detected.</p>

    <p>The quality gate and fail threshold terms are used interchangeably with the former being a feature in overall, and
        the latter meaning a configuration option. </p>

    <note>In combination with the <a href="qodana-baseline.xml">baseline</a> feature, quality gate will help
        you ensure that the overall technical debt will not grow beyond a certain threshold.</note>

    <p>This section explains how to configure %product% quality gate for:</p>
    <list>
        <li><a anchor="quality-gate-local-run">Local run using a Docker command</a></li>
        <li><a anchor="quality-gate-github-actions">GitHub actions</a></li>
        <li><a anchor="quality-gate-jenkins">Jenkins</a></li>
        <li><a anchor="quality-gate-gitlab-ci">Gitlab CI/CD</a></li>
    </list>

    <chapter id="quality-gate-local-run" title="Local run">

        <p>You can run %product% with the configured quality gate locally using available
            <a href="docker-images.md">Docker images</a>: </p>

        <code style="block" lang="shell" prompt="$">
            docker run -v &lt;source-directory&gt;/:/data/project/  \
            jetbrains/qodana-&lt;linter&gt; \
            --fail-threshold &lt;number&gt;
        </code>
        <p>In this sample, <code>&lt;source-directory&gt;</code> specifies the full local path to the project source code, and
            the <code>--fail-threshold &lt;number&gt;</code> option configures the quality gate.</p>

    </chapter>

    <chapter id="quality-gate-github-actions" title="GitHub Actions">

        <p>You can enforce GitHub to block merge of pull requests if the Qodana quality gate has failed. To do it,
            create a <a href="https://docs.github.com/en/%protectionrule%">branch protection rule</a> as described below:</p>

            <procedure>
                <step>Create a new or open an existing GitHub Actions workflow that invokes the
                    <a href="https://github.com/marketplace/actions/qodana-scan">Qodana scan</a> action.</step>
                <step><p>Set the workflow to run on <code>pull_request</code> events that target the <code>main</code> branch.</p>
                    <code style="block" lang="yaml">
                        on:
                        pull_request:
                        branches:
                        - main
                    </code>
                    <p>Instead of <code>main</code>, you can specify your branch here. </p>
                </step>
                <step>Set the fail threshold (number) for the Qodana Action <code>fail-threshold</code> option.</step>
                <step>Under your repository name, click <menupath>Settings</menupath>.</step>
                <step>On the left menu, click <menupath>Branches</menupath>.</step>
                <step>In the branch protection rules section, click <menupath>Add rule</menupath>.</step>
                <step>Add <code>main</code> to <menupath>Branch name pattern</menupath>.</step>
                <step>Select <menupath>Require status checks to pass before merging</menupath>.</step>
                <step>Search for the <menupath>Qodana</menupath> status check, then check it.</step>
                <step>Click <menupath>Create</menupath>.</step>
            </procedure>
    </chapter>

    <chapter id="quality-gate-jenkins" title="Jenkins">

        <p>To set up %product% quality gate in a Jenkins Pipeline, you can add the
            <code>--fail-threshold &lt;number&gt;</code> option to the <code>steps</code> block:</p>

        <code style="block" lang="groovy">
            stage('Qodana') {
                agent {
                    docker {
                        image 'jetbrains/qodana-&lt;linter&gt;'
                        args '-v &lt;project-directory&gt;:/data/project/'
                        args '-v &lt;report-directory&gt;:/data/results/'
                        args '--entrypoint=""'
                    }
                }
                steps {
                    sh "qodana --save-report --fail-threshold &lt;number&gt;"
                }
            }
        </code>

        <p>To learn more about %product% integration with Jenkins, see the
            <a href="jenkins.md">Jenkins</a> integration section of this documentation.</p>

    </chapter>

    <chapter id="quality-gate-gitlab-ci" title="GitLab CI/CD">
        <p>To configure the %product% quality gate in a GitLab CI/CD pipeline, you can save this configuration sample to
            the <code>.gitlab-ci.yml</code> file:</p>
        <code style="block" lang="yaml">
            qodana:
             image:
               name: jetbrains/qodana-&lt;linter&gt;
               entrypoint: ['']
             script:
               - qodana --results-dir=$CI_PROJECT_DIR/qodana
                --save-report --report-dir=$CI_PROJECT_DIR/qodana/report
                --fail-threshold &lt;number&gt;
             artifacts:
               paths:
                 - qodana
        </code>

        <p>In this sample, the <code>script</code> section specifies the <code>--fail-threshold &lt;number&gt;</code>
            option.</p>

    </chapter>
</topic>
