<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic SYSTEM "https://resources.jetbrains.com/stardust/html-entities.dtd">

<topic xsi:noNamespaceSchemaLocation="https://resources.jetbrains.com/stardust/topic.v2.xsd"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       title="Plugins"
       id="extending-qodana-plugins">

    <var name="inspection-url" value="https://plugins.jetbrains.com/docs/intellij/code-inspections-and-intentions.html#inspections"/>
    <var name="php-ea-plugin" value="https://plugins.jetbrains.com/plugin/7622-php-inspections-ea-extended-"/>
    <var name="plugin-installation" value="https://www.jetbrains.com/help/phpstorm/managing-plugins.html"/>
    <var name="conf-dir" value="https://www.jetbrains.com/help/phpstorm/directories-used-by-the-ide-to-store-settings-caches-plugins-and-logs.html#config-directory"/>
    <var name="plugin-dir" value="https://www.jetbrains.com/help/phpstorm/directories-used-by-the-ide-to-store-settings-caches-plugins-and-logs.html#plugins-directory"/>
    <var name="plugin-settings" value="https://www.jetbrains.com/help/phpstorm/managing-plugins.html#open-plugin-settings"/>
    <var name="inspection-settings" value="https://www.jetbrains.com/help/phpstorm/inspections-settings.html"/>
    <var name="configure-profiles" value="https://www.jetbrains.com/help/phpstorm/customizing-profiles.html#a7a20220"/>
    <var name="plugin-config" value="https://www.jetbrains.com/help/phpstorm/directories-used-by-the-ide-to-store-settings-caches-plugins-and-logs.html#config-directory"/>

    <p>You can extend %product% using either existing plugins from repositories, or by developing
        <a anchor="extending-qodana-developing-plugins">your own</a> plugins.</p>

    <chapter id="extending-qodana-repository-plugins" title="Plugins from repositories">

        <p>This section explains how to inspect PHP code using the <a href="qodana-php.md"/> linter enhanced with the
            <a href="%php-ea-plugin%">Php Inspections (EA Extended)</a>
            plugin. You can repeat these steps for any relevant IDE plugin from
            <a href="https://plugins.jetbrains.com/">JetBrains Marketplace</a> or any custom repository. </p>

            <chapter id="extending-qodana-repository-plugins-configure-plugin" title="Install and configure the plugin">

                <p>To run the inspections from the plugin, %product% needs access to these files:</p>

                <list>
                    <li>The code of the plugin</li>
                    <li>The configuration of the plugin</li>
                    <li>The inspection profile containing the configuration of the plugin inspections</li>
                </list>

                <p>Here is how you can obtain these files:</p>

                <procedure style="choices">
                <step><p>Install the plugin using any of the
                    <a href="%plugin-installation%">installation method</a> available. For any installation
                    method chosen, you need to know the path to the plugin file after it has been installed. If you
                    install the plugin using the
                        <a href="%plugin-settings%">Settings | Plugins</a> dialog of your IDE, see the
                        <a href="%plugin-dir%">Plugins directory</a> section for reference. If you download the
                        <code>PhpInspectionsEA.jar</code> plugin file from
                        <a href="%php-ea-plugin%">JetBrains Marketplace</a>, save it to a directory accessible
                        by %product%.</p>
                </step>
                <step>
                    The <code>ea_extended.xml</code> plugin configuration file is located in the <code>options</code>
                    subdirectory of the <a href="%conf-dir%">IDE config directory</a>. You can save this file to
                    any directory accessible by %product%.
                </step>
                <step><p>
                    Navigate to the <a href="%inspection-settings%">Inspections</a> dialog of your IDE, expand
                    the <menupath>PHP | Php Inspections (EA Extended)</menupath> entry, check the inspections you
                    would like to employ, and <a href="%configure-profiles%">export the inspection profile</a>
                    in the project root folder under the <code>qodana-inspection-profile.xml</code> filename. </p>
                </step>
                </procedure>

            </chapter>

        <chapter id="extending-qodana-repository-plugins-configure-qodana" title="Configure %product%">

            <p>In the project root directory, create the <code>qodana.yaml</code> file and specify the path to the
                <a href="inspection-profiles.md" anchor="Profile+path">profile</a> location in it:</p>
            <code style="block" lang="yaml">
                profile:
                    path: ./qodana-inspection-profile.xml
            </code>

        </chapter>

        <chapter id="extending-qodana-repository-plugins-run-qodana" title="Run %product%">
            <p>Use this snippet for running %product% locally:</p>
            <code style="block" lang="bash">
                docker run --rm \
                   -p 8080:8080 \
                   -v &lt;project-directory&gt;:/data/project/ \
                   -v &lt;report-directory&gt;:/data/results/ \
                   -v &lt;path-to-plugin-file&gt;/PhpInspectionsEA.jar:/opt/idea/plugins/PhpInspectionsEA.jar \
                   -v &lt;path-to-plugin-config&gt;/ea_extended.xml:/root/.config/idea/options/ea_extended.xml \
                   jetbrains/qodana-php --show-report
            </code>
        </chapter>


    </chapter>

    <chapter id="extending-qodana-developing-plugins" title="Custom plugins">
        <p>To learn how to develop plugins, you can study the
            <a href="https://plugins.jetbrains.com/docs/intellij/getting-started.html">Creating Your First Plugin</a>
            page of the IntelliJ Platform Plugin SDK documentation portal. Besides that, each plugin should perform
            inspections and produce inspection results as described in the
            <a href="%inspection-url%">Inspections</a> section of the documentation portal. </p>
    </chapter>



</topic>
